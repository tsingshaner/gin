{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Server app YAML Schema",
  "description": "Schema for server configuration file",
  "required": [
    "consoleLevel",
    "cors",
    "jwt",
    "postgres",
    "server",
    "swagger",
    "logger"
  ],
  "properties": {
    "version": {
      "type": "integer",
      "enum": [0]
    },
    "consoleLevel": {
      "description": "console logger level",
      "type": "integer",
      "examples": [63]
    },
    "cors": {
      "$ref": "#/definitions/cors"
    },
    "jwt": {
      "$ref": "#/definitions/jwt"
    },
    "postgres": {
      "$ref": "#/definitions/postgres"
    },
    "server": {
      "$ref": "#/definitions/server"
    },
    "swagger": {
      "$ref": "#/definitions/swagger"
    },
    "logger": {
      "$ref": "#/definitions/logger"
    }
  },
  "definitions": {
    "cors": {
      "type": "object",
      "required": [
        "enabled",
        "allowAllOrigins",
        "allowOrigins",
        "allowMethods",
        "allowHeaders",
        "allowCredentials"
      ],
      "properties": {
        "enabled": {
          "description": "enable CORS middleware",
          "type": "boolean"
        },
        "allowAllOrigins": {
          "type": "boolean"
        },
        "allowOrigins": {
          "description": "a list of origins a cross-domain request can be executed from. If the special \"*\" value is present in the list, all origins will be allowed.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [["http://localhost:5173"]]
        },
        "allowMethods": {
          "description": "a list of methods the client is allowed to use with cross-domain requests.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["GET", "POST", "PUT", "PATCH", "DELETE", "HEAD", "OPTIONS"]
          },
          "examples": [
            ["GET", "POST", "PUT", "PATCH", "DELETE", "HEAD", "OPTIONS"]
          ]
        },
        "allowPrivateNetwork": {
          "description": "indicates whether the response should include allow private network header",
          "type": "boolean"
        },
        "allowHeaders": {
          "description": "a list of non simple headers the client is allowed to use with cross-domain requests.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [["Content-Type", "Authorization", "X-Requested-With"]]
        },
        "allowCredentials": {
          "description": "indicates whether the request can include user credentials like cookies, HTTP authentication or client side SSL certificates.",
          "type": "boolean"
        },
        "exposeHeaders": {
          "description": "indicates which headers are safe to expose to the API of a CORS API specification",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [["Content-Length"]]
        },
        "maxAge": {
          "description": "indicates how long (with second-precision) the results of a preflight request can be cached",
          "type": "string",
          "examples": ["5m"]
        },
        "allowWildcard": {
          "description": "allows to add origins like http://some-domain/*, https://api.* or http://some.*.subdomain.com",
          "type": "boolean"
        },
        "allowBrowserExtensions": {
          "description": "allows usage of popular browser extensions schemas",
          "type": "boolean"
        },
        "customSchemas": {
          "description": "allows to add custom schema like tauri://",
          "type": "array",
          "items": {
            "type": "string"
          },
          "examples": [["tauri://"]]
        },
        "allowWebSockets": {
          "type": "boolean"
        },
        "allowFiles": {
          "description": "Allows usage of file:// schema (dangerous!) use it only when you 100% sure it's needed",
          "type": "boolean"
        },
        "optionsResponseStatusCode": {
          "description": "Allows to pass custom OPTIONS response status code for old browsers / clients",
          "type": "integer",
          "examples": [200]
        }
      }
    },
    "jwt": {
      "type": "object",
      "required": ["claims", "methods"],
      "properties": {
        "claims": {
          "type": "object",
          "required": ["expire", "refreshExpire"],
          "properties": {
            "audience": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "examples": [["https://example.com"]]
            },
            "issuer": {
              "type": "string",
              "examples": ["https://example.com"]
            },
            "subject": {
              "type": "string",
              "examples": ["demo"]
            },
            "expire": {
              "type": "string",
              "examples": ["30m", "1h", "24h"]
            },
            "refreshExpire": {
              "type": "string",
              "examples": ["30m", "1h", "24h"]
            }
          }
        },
        "methods": {
          "minItems": 1,
          "type": "array",
          "items": {
            "type": "object",
            "if": {
              "properties": {
                "alg": { "pattern": "^HS" }
              }
            },
            "then": {
              "required": ["alg", "key"]
            },
            "else": {
              "required": ["alg", "pem"]
            },
            "properties": {
              "alg": {
                "type": "string",
                "enum": [
                  "HS256",
                  "HS384",
                  "HS512",
                  "RS256",
                  "RS384",
                  "RS512",
                  "ES256",
                  "ES384",
                  "ES512",
                  "EdDSA"
                ]
              },
              "key": {
                "type": "string",
                "minLength": 8
              },
              "pem": {
                "type": "object",
                "required": ["publicPath", "privatePath"],
                "properties": {
                  "publicPath": { "type": "string" },
                  "privatePath": { "type": "string" }
                }
              }
            }
          }
        }
      }
    },
    "postgres": {
      "type": "object",
      "properties": {
        "host": { "type": "string", "examples": ["127.0.0.1"] },
        "port": { "type": "integer", "examples": [5432] },
        "user": { "type": "string", "examples": ["postgres"] },
        "password": { "type": "string", "examples": ["postgres"] },
        "database": { "type": "string", "examples": ["postgres"] },
        "sslMode": {
          "type": "string",
          "enum": [
            "disable",
            "allow",
            "prefer",
            "require",
            "verify-ca",
            "verify-full"
          ]
        },
        "timeZone": {
          "type": "string",
          "examples": ["Asia/Shanghai"]
        }
      }
    },
    "server": {
      "type": "object",
      "properties": {
        "host": { "type": "string", "examples": ["127.0.0.1"] },
        "port": { "type": "integer", "examples": [4936] },
        "mode": {
          "description": "see gin mode",
          "enum": ["debug", "release", "test"]
        },
        "base": {
          "description": "path prefix for all routes",
          "type": "string",
          "examples": ["/api"]
        },
        "readTimeout": {
          "description": "read timeout in seconds",
          "type": "string",
          "examples": ["5m"]
        },
        "requestIdHeader": {
          "description": "request id header",
          "type": "string",
          "examples": ["X-Request-ID"]
        },
        "writeTimeout": {
          "description": "write timeout in seconds",
          "type": "string",
          "examples": ["5m"]
        },
        "maxHeaderBytes": {
          "description": "maximum header bytes",
          "type": "integer",
          "examples": [1048576]
        }
      },
      "required": [
        "host",
        "port",
        "mode",
        "readTimeout",
        "requestIdHeader",
        "writeTimeout",
        "maxHeaderBytes"
      ]
    },
    "swagger": {
      "type": "object",
      "required": ["enable"],
      "properties": {
        "enable": {
          "description": "enable swagger",
          "type": "boolean",
          "examples": [true]
        },
        "basePath": {
          "description": "base path for swagger",
          "type": "string",
          "examples": ["/docs"]
        }
      }
    },
    "logger": {
      "type": "object",
      "properties": {
        "level": {
          "description": "log enabled level",
          "type": "integer",
          "examples": [63]
        },
        "gorm": {
          "type": "object",
          "required": ["level", "slowThreshold"],
          "properties": {
            "level": {
              "description": "gorm logger level",
              "type": "integer",
              "examples": [63]
            },
            "slowThreshold": {
              "description": "slow query threshold",
              "type": "string",
              "examples": ["200ms"]
            },
            "ignoreRecordNotFoundError": {
              "type": "boolean"
            },
            "parameterizedQueries": {
              "type": "boolean"
            }
          }
        },
        "stdoutWriter": {
          "type": "object",
          "required": ["enable"],
          "properties": {
            "enable": {
              "description": "enable stdout writer",
              "type": "boolean",
              "examples": [true]
            }
          }
        }
      },
      "required": ["level", "gorm"]
    }
  }
}
