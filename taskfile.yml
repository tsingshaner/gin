# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

env:
  GO111MODULE: on
  GOPROXY: https://goproxy.cn,direct

vars:
  TARGET: ./target
  APP_ENTRY: ./cmd/server/main.go
  MODS:
    - ./api/openapi
    - ./app
    - ./cmd
    - ./config
    - ./e2e
    - ./gen
    - ./middleware
    - ./mod/comment
    - ./mod/user
    - ./resp
    - ./shared
    - ./swagger
    - ./validator

# 监听文件变化的时间间隔
interval: 500ms

includes:
  cmd:
    dir: cmd
    taskfile: cmd/taskfile.yml

  config:
    dir: config
    taskfile: config/taskfile.yml

  e2e:
    dir: e2e
    taskfile: e2e/taskfile.yml

  gen:
    dir: gen
    taskfile: gen/taskfile.yml

  mod:user:
    dir: mod/user
    taskfile: mod/user/taskfile.yml

tasks:
  default: task --list-all

  bump:
    desc: bump dependencies for all sub packages
    deps:
      - for: { var: MODS }
        task: _bump
        vars: { MOD: "{{.ITEM}}" }
    cmd: go work sync
  _bump:
    internal: true
    dir: "./{{.MOD}}"
    cmds:
      - go get -u ./...
      - go mod tidy

  githooks:
    summary: setup Git hooks
    cmd: git config core.hooksPath githooks

  e2e:
    summary: 运行端到端测试
    deps:
      - mod:user:e2e

  install:
    summary: 安装依赖
    cmds:
      - go mod download

  docs:
    summary: 更新 swagger 文档
    vars:
      DOCS_PATH: "./api/open-api"
    cmds:
      - go run ./cmd/gen/main.go
      - swag init -g {{.APP_ENTRY}} -o {{.DOCS_PATH}} --md {{.DOCS_PATH}}

  dev:
    summary: 监听文件变化自动重启
    method: none
    run: always
    sources:
      - "cmd/server/main.go"
      - "pkg/**/*.go"
      - "internal/**/*.go"
      - "config/*.yaml"
      - "config/*.go"
    watch: true
    cmds:
      - cmd: "taskkill /IM main.exe /F"
        platforms: [windows]
        ignore_error: true
        silent: true
      - cmd: pkill -f "main.exe"
        platforms: [linux, darwin]
        ignore_error: true
        silent: true
      - task: run

  run:
    summary: 启动服务
    cmds:
      - task: fmt
      - task: docs
      - go run {{.APP_ENTRY}} -c ./config/app.yaml

  build:
    cmds:
      - cmd: "go build -o ./target/main {{.APP_ENTRY}}"
        platforms: [linux, darwin]
      - cmd: "go build -o ./target/main.exe {{.APP_ENTRY}}"
        platforms: [windows]

  build:alpine:
    env:
      CGO_ENABLED: 0
      GOOS: linux
    cmds:
      - go build -a -ldflags '-w -s -extldflags "-static"' -o ./target/main {{.APP_ENTRY}}

  fmt:
    summary: 格式化代码
    cmds:
      - go fmt ./...
      - swag fmt

  migrate:
    summary: 数据库迁移
    cmds:
      - go run ./cmd/migrate/main.go

  rsa:
    summary: 生成 RSA 密钥对用于 JWT
    cmds:
      - openssl genpkey -algorithm RSA -out ./private_key.pem -pkeyopt rsa_keygen_bits:2048
      - openssl rsa -pubout -in ./private_key.pem -out ./public_key.pem

  test:
    summary: 运行测试
    cmds:
      - go test -v ./...

  cover:
    summary: 生成测试覆盖率报告
    cmds:
      - cmd: powershell New-Item -ItemType Directory -Force -Path ./coverage
        platforms: [windows]
      - cmd: mkdir -p ./coverage
        platforms: [linux, darwin]
      - go test -coverprofile=./coverage/coverage.out ./...
      - go tool cover -html=./coverage/coverage.out -o ./coverage/coverage.html

  docker:build:
    summary: 构建 Docker 镜像
    cmd: docker build -t lab -f ./deployments/docker/Dockerfile .

  docker:up:
    summary: Docker Compose
    cmd: docker-compose -f ./deployments/docker/docker-compose.yml up

  docker:rebuild:
    summary: 重建 Docker 镜像并启动
    cmd: docker-compose -f ./deployments/docker/docker-compose.yml up --build
